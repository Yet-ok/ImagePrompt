const fs = require('fs');
const path = require('path');

// 创建一个测试图片文件
const testImagePath = path.join(__dirname, 'test-image.jpg');

// 创建一个简单的测试图片数据（1x1像素的JPEG）
const testImageData = Buffer.from([
  0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01,
  0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43,
  0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09,
  0x09, 0x08, 0x0A, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x19, 0x12,
  0x13, 0x0F, 0x14, 0x1D, 0x1A, 0x1F, 0x1E, 0x1D, 0x1A, 0x1C, 0x1C, 0x20,
  0x24, 0x2E, 0x27, 0x20, 0x22, 0x2C, 0x23, 0x1C, 0x1C, 0x28, 0x37, 0x29,
  0x2C, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1F, 0x27, 0x39, 0x3D, 0x38, 0x32,
  0x3C, 0x2E, 0x33, 0x34, 0x32, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x01,
  0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01,
  0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xC4,
  0x00, 0x14, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xDA, 0x00, 0x0C,
  0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0x9F, 0xFF, 0xD9
]);

fs.writeFileSync(testImagePath, testImageData);

async function testAPI() {
  try {
    console.log('开始测试API端点...');
    
    // 使用Node.js的FormData（需要安装form-data包）
    const FormData = require('form-data');
    const formData = new FormData();
    
    // 添加测试数据
    formData.append('aiModel', 'gpt-4o');
    formData.append('imageFile', fs.createReadStream(testImagePath), {
      filename: 'test-image.jpg',
      contentType: 'image/jpeg'
    });
    
    // 使用axios发送请求（因为Node.js的fetch可能不支持form-data）
    const axios = require('axios');
    const response = await axios.post('http://localhost:3000/api/generate-prompt', formData, {
      headers: {
        ...formData.getHeaders(),
      },
      validateStatus: () => true // 允许所有状态码
    });
    
    console.log('响应状态:', response.status);
    
    if (response.status === 200) {
      console.log('API调用成功:', response.data);
    } else {
      console.log('API调用失败:', response.data);
    }
    
  } catch (error) {
    console.error('测试过程中出现错误:', error);
  } finally {
    // 清理测试文件
    if (fs.existsSync(testImagePath)) {
      fs.unlinkSync(testImagePath);
    }
  }
}

testAPI();